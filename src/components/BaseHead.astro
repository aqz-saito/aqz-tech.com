---
import siteConfig from "@/config/site.config";

/**
 * Component to manage meta information in the HTML head tag
 *
 * @component
 * @description
 * - Basic meta tags configuration
 * - OGP implementation
 * - Twitter Cards support
 * - Favicon settings
 * - Font loading optimization
 * - SEO optimization with structured data
 *
 * @example
 * ---
 * import BaseHead from '@/components/BaseHead.astro';
 * ---
 * <head>
 *   <BaseHead
 *     title="Article Title"
 *     description="Page description"
 *     ogType="article"
 *     category="Programming"
 *     tags={["JavaScript", "Astro"]}
 *     publishedTime="2023-10-01"
 *     modifiedTime="2023-10-02"
 *     readingTime={5}
 *   />
 * </head>
 */

interface Props {
  title: string;
  description: string;
  image?: string;
  ogType?: "website" | "article";
  publishedTime?: string;
  modifiedTime?: string;
  category?: string;    // Added
  tags?: string[];      // Added
  series?: {            // Added
    name: string;
    index: number;
  };
  readingTime?: number; // Added
}

const {
  title,
  description = siteConfig.description, // デフォルト値を追加
  image = siteConfig.image,
  ogType = "website",
  publishedTime,
  modifiedTime,
  category,
  tags = [],
  series,
  readingTime,
} = Astro.props;

// URLの処理を安全に行う
const canonicalURL = Astro.site 
  ? new URL(Astro.url.pathname, Astro.site) 
  : Astro.url.pathname;

const imageUrl = image && Astro.site 
  ? new URL(image, Astro.site).toString()
  : image;

// Extend JSON-LD structured data
const jsonLd = {
  "@context": "https://schema.org",
  "@type": ogType === "article" ? "TechArticle" : "WebSite",
  headline: title,
  description: description,
  image: imageUrl,
  url: canonicalURL.toString(),
  siteUrl: Astro.site?.toString(),
  inLanguage: siteConfig.lang,
  ...(ogType === "article" && {
    datePublished: publishedTime,
    dateModified: modifiedTime || publishedTime,
    author: {
      "@type": "Person",
      name: siteConfig.author.name,
      url: siteConfig.author.url,
    },
    publisher: {
      "@type": "Organization",
      name: siteConfig.name,
      logo: {
        "@type": "ImageObject",
        url: new URL(siteConfig.logo, Astro.site).toString(),
      },
    },
    // Additional metadata for technical articles
    articleSection: category,
    keywords: tags.join(", "),
    timeRequired: readingTime ? `PT${Math.round(readingTime)}M` : undefined,
    ...(series && {
      isPartOf: {
        "@type": "Series",
        name: series.name,
        position: series.index,
      }
    }),
    // Additional properties for technical articles
    proficiencyLevel: "Beginner",
    programmingLanguage: tags.filter(tag => 
      ['JavaScript', 'TypeScript', 'Python', 'Java', 'Ruby'].includes(tag)
    ),
  }),
};
---

<!-- Basic Settings -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>{title} | {siteConfig.name}</title>
<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />

<!-- JSON-LD Structured Data -->
<script type="application/ld+json" is:inline set:html={JSON.stringify(jsonLd)} />

<!-- OGP Settings -->
<meta property="og:title" content={`${title} | ${siteConfig.name}`} />
<meta property="og:type" content={ogType} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:site_name" content={siteConfig.name} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageUrl} />
{
  publishedTime && (
    <meta property="article:published_time" content={publishedTime} />
  )
}
{
  modifiedTime && (
    <meta property="article:modified_time" content={modifiedTime} />
  )
}

<!-- Twitter Cards -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content={siteConfig.twitterHandle} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={imageUrl} />

<!-- Favicon -->
<link rel="icon" href="/favicon.ico" sizes="any" />
<link rel="icon" href="/favicon.svg" type="image/svg+xml" />
<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
<link rel="manifest" href="/site.webmanifest" />

<!-- Fonts -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link
  href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&display=swap"
  rel="stylesheet"
/>
